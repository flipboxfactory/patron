{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% block actionButton %}
    {% if craft.app.config.general.allowAdminChanges %}
        <div class="btngroup submit right">
            <input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">
            <div class="btn submit menubtn"></div>
            <div class="menu">
                <ul role="listbox">
                    <li>
                        <a class="formsubmit"
                           data-redirect="{{ continueEditingUrl|hash }}">
                            {{ forms.optionShortcutLabel('S') }}
                            {{ "Save and continue editing"|t('app') }}
                        </a>
                    </li>
                    <li>
                        <a class="formsubmit"
                           data-redirect="{{ (baseCpPath ~ '/new')|hash }}">
                            {{ "Save and add another"|t('app') }}
                        </a>
                    </li>
                </ul>
                {% if provider.id and not pluginLocks|length %}
                    <hr/>
                    <ul role="listbox">
                        <li>
                            <a class="formsubmit error"
                               data-action="{{ baseActionPath }}/delete"
                               data-confirm="{{ 'Are you sure you want to delete this provider?'|t('patron') }}"
                               data-redirect="{{ baseCpProvidersPath|hash }}"
                               role="option"
                               tabindex="-1">{{ "Delete"|t('app') }}</a>
                        </li>
                    </ul>
                {% endif %}
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block content %}
    <input type="hidden" name="action"
           value="{{ baseActionPath }}/{% if provider.id %}update{% else %}create{% endif %}">
    {% if provider.id %}<input type="hidden" name="provider" value="{{ provider.id }}">{% endif %}
    {{ redirectInput(baseCpPath) }}

    {{ forms.selectField({
        first: true,
        label: "Provider"|t('patron'),
        id: 'class',
        name: 'class',
        showAllOption: true,
        value: provider.class,
        options: providerOptions,
        errors: provider.getErrors('class'),
        required: true,
        toggle: true
    }) }}

    {{ forms.textField({
        label: "Handle"|t('patron'),
        instructions: "The unique reference to this provider."|t('patron'),
        class: "code",
        id: 'handle',
        name: 'handle',
        value: provider.handle,
        errors: provider.getErrors('handle'),
        autofocus: true,
        required: true,
        first: true
    }) }}

    <hr>

    {{ forms.textField({
        label: "Client Id"|t('patron'),
        instructions: "The client/consumer Id assigned to you from the provider."|t('patron'),
        id: 'clientId',
        name: 'clientId',
        value: provider.clientId,
        errors: provider.getErrors('clientId'),
        required: true
    }) }}

    {{ forms.textField({
        label: "Client Secret"|t('patron'),
        instructions: "The client/consumer secret assigned to you from the provider."|t('patron'),
        id: 'clientSecret',
        name: 'clientSecret',
        type: 'password',
        value: provider.clientSecret,
        errors: provider.getErrors('clientSecret')
    }) }}

    {% for providerOption in providerOptions %}
        {% set class = providerOption.value %}
        {% set isCurrent = (class == provider.class) %}
        <div id="{{ class|id }}"{% if not isCurrent %} class="hidden"{% endif %}>
            {% namespace 'settings['~class~']' %}
                {% if isCurrent %}
                    {% set providerSettingsObj = craft.patron.providerSettings(class, provider.settings) %}
                    {{ providerSettingsObj.inputHtml()|raw }}
                {% else %}
                    {{ craft.patron.providerSettings(class).inputHtml()|raw }}
                {% endif %}
            {% endnamespace %}
        </div>
    {% endfor %}
{% endblock %}

{% block details %}
    <div id="settings" class="meta">
        {{ forms.lightswitchField({
            label: "Enabled"|t('app'),
            id: 'enabled',
            name: 'enabled',
            on: provider.id ? provider.enabled : true,
            errors: provider.getErrors('enabled')
        }) }}
    </div>

    {% if provider.id %}
        <hr>
        <div class="meta read-only">
            <div class="data">
                <h5 class="heading">{{ "Created at"|t('app') }}</h5>
                <div class="value">{{ provider.dateCreated|datetime('short') }}</div>
            </div>
            <div class="data">
                <h5 class="heading">{{ "Updated at"|t('app') }}</h5>
                <div class="value">{{ provider.dateUpdated|datetime('short') }}</div>
            </div>
        </div>
    {% endif %}

    {% if pluginLocks|length %}
        <hr/>
        <div id="locks" class="meta">
            <h4 class="heading">{{ "Locks"|t('patron') }} <span
                        class="info">{{ "The plugins listed blow have locked this provider from being deleted.  This provider should be deleted through the plugin."|t('patron') }}</span>
            </h4>
            <ul id="plugin-locks">
                {% for plugin in pluginLocks %}
                    <li>
                        <span class="icon icon-mask">
                            {%- if plugin.icon is defined -%}
                                {{ svg(plugin.icon) }}
                            {%- elseif plugin.fontIcon is defined -%}
                                <span data-icon="{{ plugin.fontIcon }}"></span>
                            {%- else -%}
                                {% include "_includes/defaulticon.svg" with { label: plugin.name } %}
                            {%- endif -%}
                        </span>
                        {{ plugin.name }}
                    </li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}

    {% hook 'patron.clients.edit.sidebar' %}

{% endblock %}
